name: Bitergia Analytics release

on:
  workflow_dispatch:
    inputs:
      release_candidate:
        description: "Create a release candidate version"
        required: true
        type: boolean
        default: false
      git_email:
        description: "Git email for commits messages"
        required: true
        default: "sduenas@bitergia.com"
      git_name:
        description: "Git name for commits messages"
        required: true
        default: "Santiago DueÃ±as"

jobs:
  variables-job:
    name: Set variables
    runs-on: ubuntu-latest
    outputs:
      git_email: ${{ steps.variables.outputs.git_email }}
      git_name: ${{ steps.variables.outputs.git_name }}
      release_candidate: ${{ steps.variables.outputs.release_candidate }}
    steps:
      - id: variables
        name: variables
        run: |
          echo "git_email=${{ inputs.git_email }}" >> $GITHUB_OUTPUT
          echo "git_name=${{ inputs.git_name}}" >> $GITHUB_OUTPUT
          echo "release_candidate=${{ inputs.release_candidate}}" >> $GITHUB_OUTPUT

  setup:
    name: Get version from each repository
    runs-on: ubuntu-latest
    environment: bap-release
    needs:
      - variables-job
    strategy:
      matrix:
        repository: [
          bitergia-analytics,
          bitergia-analytics-opensearch,
          bitergia-analytics-opensearch-dashboards,
          bitergia-analytics-plugin,
          dotplot-vis-plugin,
          network-vis-plugin,
          polar-vis-plugin,
          radar-vis-plugin
        ]
    outputs:
      bitergia_analytics_version: ${{ steps.semverup.outputs.bitergia-analytics }}
      bitergia_analytics_forced_version: ${{ steps.semverup.outputs.bitergia-analytics_forced_version }}
      opensearch_version: ${{ steps.semverup.outputs.bitergia-analytics-opensearch }}
      opensearch_forced_version: ${{ steps.semverup.outputs.bitergia-analytics-opensearch_forced_version }}
      dashboards_version: ${{ steps.semverup.outputs.bitergia-analytics-opensearch-dashboards }}
      dashboards_forced_version: ${{ steps.semverup.outputs.bitergia-analytics-opensearch-dashboards_forced_version }}
      plugin_version: ${{ steps.semverup.outputs.bitergia-analytics-plugin }}
      plugin_forced_version: ${{ steps.semverup.outputs.bitergia-analytics-plugin_forced_version }}
      dotplot_version: ${{ steps.semverup.outputs.dotplot-vis-plugin }}
      dotplot_forced_version: ${{ steps.semverup.outputs.dotplot-vis-plugin_forced_version }}
      network_version: ${{ steps.semverup.outputs.network-vis-plugin }}
      network_forced_version: ${{ steps.semverup.outputs.network-vis-plugin_forced_version }}
      polar_version: ${{ steps.semverup.outputs.polar-vis-plugin }}
      polar_forced_version: ${{ steps.semverup.outputs.polar-vis-plugin_forced_version }}
      radar_version: ${{ steps.semverup.outputs.radar-vis-plugin }}
      radar_forced_version: ${{ steps.semverup.outputs.radar-vis-plugin_forced_version }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: bitergia-analytics/${{ matrix.repository }}
          path: ${{ matrix.repository }}
          token: '${{ secrets.BAP_BUILD_TOKEN }}'
          fetch-depth: 0

      - name: Install release-tools
        run: pip install git+https://github.com/Bitergia/release-tools.git#egg=release-tools
      
      - id: old-version
        name: Get old version
        run: |
          if [ ${{ contains(matrix.repository, 'plugin') }} == 'true' ]
          then
            version=$(jq '.version' package.json)
          else
            version=$(<version)
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
        working-directory: ${{ matrix.repository }}

      - id: semverup
        name: Get version number
        continue-on-error: true
        shell: bash {0}
        run: |
          old_version=${{ steps.old-version.outputs.version }}
          if [ ${{ inputs.release_candidate }} == 'true' ]
          then
            rcArg='--pre-release'
          else
            rcArg=''
          fi

          version=$(semverup --dry-run --current-version $old_version $rcArg)
          if [ -z $version ] && [ ${{ inputs.release_candidate }} != 'true' ] && [[ "$old_version" =~ .*rc.* ]]
          then
            echo "Create final version from rc"
            version=$(semverup --dry-run --current-version $old_version --bump-version patch)
            forced_version=true
          else
            forced_version=false
          fi

          echo $version
          echo "${{ matrix.repository }}=$version" >> $GITHUB_OUTPUT

          if [ -z $version ] || [ $forced_version == true ]
          then
            echo "${{ matrix.repository }}_forced_version=true" >> $GITHUB_OUTPUT
          else
            echo "${{ matrix.repository }}_forced_version=false" >> $GITHUB_OUTPUT
          fi
        working-directory: ${{ matrix.repository }}
   
  semverup:
    name: Choose highest version number
    runs-on: ubuntu-latest
    needs:
      - setup
    outputs:
      version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Choose version number
        id: version
        run: |
          versions=(
            ${{ needs.setup.outputs.bitergia_analytics_version }}
            ${{ needs.setup.outputs.plugin_version }}
            ${{ needs.setup.outputs.dotplot_version }}
            ${{ needs.setup.outputs.network_version }}
            ${{ needs.setup.outputs.polar_version }}
            ${{ needs.setup.outputs.radar_version }}
            ${{ needs.setup.outputs.opensearch_version }}
            ${{ needs.setup.outputs.dashboards_version }}
          )
          IFS=$'\n' new_version=($(sort -r -V <<<"${versions[*]}" | head -n1)); unset IFS
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo $new_version

  bitergia-analytics-plugin:
    name: Bitergia Analytics Plugin
    needs:
      - variables-job
      - setup
      - semverup
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'bitergia-analytics-plugin'
      module_repository: 'bitergia-analytics/bitergia-analytics-plugin'
      module_directory: 'bitergia-analytics-plugin'
      forced_version: ${{ needs.setup.outputs.plugin_forced_version }}
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}

  bitergia-analytics-opensearch:
    name: Bitergia Analytics OpenSearch
    needs:
      - variables-job
      - setup
      - semverup
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'bitergia-analytics-opensearch'
      module_repository: 'bitergia-analytics/bitergia-analytics-opensearch'
      module_directory: 'bitergia-analytics-opensearch'
      forced_version: ${{ needs.setup.outputs.opensearch_forced_version }}
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}
  
  dotplot-vis-plugin:
    name: Dotplot Visualization Plugin
    needs:
      - variables-job
      - setup
      - semverup
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'dotplot-vis-plugin'
      module_repository: 'bitergia-analytics/dotplot-vis-plugin'
      module_directory: 'dotplot-vis-plugin'
      forced_version: ${{ needs.setup.outputs.dotplot_forced_version }}
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}
  
  network-vis-plugin:
    name: Network Visualization Plugin
    needs:
      - variables-job
      - setup
      - semverup
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'network-vis-plugin'
      module_repository: 'bitergia-analytics/network-vis-plugin'
      module_directory: 'network-vis-plugin'
      forced_version: ${{ needs.setup.outputs.network_forced_version }}
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}
  
  polar-vis-plugin:
    name: Polar Visualization Plugin
    needs:
      - variables-job
      - setup
      - semverup
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'polar-vis-plugin'
      module_repository: 'bitergia-analytics/polar-vis-plugin'
      module_directory: 'polar-vis-plugin'
      forced_version: ${{ needs.setup.outputs.polar_forced_version }}
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}
  
  radar-vis-plugin:
    name: Radar Visualization Plugin
    needs:
      - variables-job
      - setup
      - semverup
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'radar-vis-plugin'
      module_repository: 'bitergia-analytics/radar-vis-plugin'
      module_directory: 'radar-vis-plugin'
      forced_version: ${{ needs.setup.outputs.radar_forced_version }}
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}

  bitergia-analytics-opensearch-dashboards:
    name: Bitergia Analytics OpenSearch Dashboards
    needs:
      - variables-job
      - setup
      - semverup
      - bitergia-analytics-plugin
      - dotplot-vis-plugin
      - network-vis-plugin
      - polar-vis-plugin
      - radar-vis-plugin
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'bitergia-analytics-opensearch-dashboards'
      module_repository: 'bitergia-analytics/bitergia-analytics-opensearch-dashboards'
      module_directory: 'bitergia-analytics-opensearch-dashboards'
      forced_version: ${{ needs.setup.outputs.dashboards_forced_version }}
      plugin_url: ${{ needs.bitergia-analytics-plugin.outputs.plugin_url }}
      dotplot_url: ${{ needs.dotplot-vis-plugin.outputs.plugin_url }}
      network_url: ${{ needs.network-vis-plugin.outputs.plugin_url }}
      polar_url: ${{ needs.polar-vis-plugin.outputs.plugin_url }}
      radar_url: ${{ needs.radar-vis-plugin.outputs.plugin_url }}
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}

  perceval-public-inbox:
    name: perceval-public-inbox
    needs:
      - variables-job
      - setup
      - semverup
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'perceval-public-inbox'
      module_repository: 'bitergia-analytics/grimoirelab-perceval-public-inbox'
      module_directory: 'perceval-public-inbox'
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}

  perceval-topicbox:
    name: perceval-topicbox
    needs:
      - variables-job
      - setup
      - semverup
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'perceval-topicbox'
      module_repository: 'bitergia-analytics/grimoirelab-perceval-topicbox'
      module_directory: 'perceval-topicbox'
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}

  bap-elk-backends:
    name: bap-elk-backends
    needs:
      - variables-job
      - setup
      - semverup
      - perceval-public-inbox
      - perceval-topicbox
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'bap-elk-backends'
      module_repository: 'bitergia-analytics/bitergia-analytics-elk-backends'
      module_directory: 'bap-elk-backends'
      dependencies: "${{ needs.perceval-public-inbox.outputs.package_version }} \
      ${{ needs.perceval-topicbox.outputs.package_version }}"
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}

  sortinghat-openinfra:
    name: sortinghat-openinfra
    needs:
      - variables-job
      - setup
      - semverup
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'sortinghat-openinfra'
      module_repository: 'bitergia-analytics/sortinghat-openinfra'
      module_directory: 'sortinghat-openinfra'
    secrets:
      access_token: ${{ secrets.BAP_BUILD_TOKEN }}

  bitergia-analytics:
    name: Bitergia Analytics
    runs-on: ubuntu-latest
    environment: bap-release
    needs:
      - variables-job
      - setup
      - semverup
      - bitergia-analytics-plugin
      - bitergia-analytics-opensearch-dashboards
      - bitergia-analytics-opensearch
      - dotplot-vis-plugin
      - network-vis-plugin
      - polar-vis-plugin
      - radar-vis-plugin
      - perceval-public-inbox
      - perceval-topicbox
      - bap-elk-backends
      - sortinghat-openinfra
    steps:
      - name: Checkout source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: bitergia-analytics/bitergia-analytics
          token: ${{ secrets.BAP_BUILD_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Git config
        run: |
          git config --global user.email "${{ inputs.git_email }}"
          git config --global user.name "${{ inputs.git_name }}"

      - name: Install release-tools
        run: pip install git+https://github.com/Bitergia/release-tools.git#egg=release-tools
      
      - id: version
        name: Update version file
        shell: bash
        run: |
          new_version=${{ needs.semverup.outputs.version }}
          echo $new_version > version
      
      - name: Generate release notes
        id: notes
        env:
          plugin_notes: "${{ needs.bitergia-analytics-plugin.outputs.notes }}"
          opensearch_notes: "${{ needs.bitergia-analytics-opensearch.outputs.notes }}"
          dashboards_notes: "${{ needs.bitergia-analytics-opensearch-dashboards.outputs.notes }}"
          dotplot_notes: "${{ needs.dotplot-vis-plugin.outputs.notes }}"
          network_notes: "${{ needs.network-vis-plugin.outputs.notes }}"
          polar_notes: "${{ needs.polar-vis-plugin.outputs.notes }}"
          radar_notes: "${{ needs.radar-vis-plugin.outputs.notes }}"
          perceval_public_inbox_notes: "${{ needs.perceval-public-inbox.outputs.notes }}"
          perceval_topicbox_notes: "${{ needs.perceval-topicbox.outputs.notes }}"
          bap_elk_backends_notes: "${{ needs.bap-elk-backends.outputs.notes }}"
          sortinghat_openinfra_notes: "${{ needs.sortinghat-openinfra.outputs.notes }}"
        run: |
          version=${{ needs.semverup.outputs.version }}
          eof="EOF$(date +%s)"
          release_file="releases/$version.md"
          notes=''
          if [ ${{ inputs.release_candidate }} == 'true' ]
          then
            newsArg=''
            rcArg='--pre-release'
          else
            rcArg=''
          fi

          if [ ${{ needs.setup.outputs.bitergia_analytics_forced_version }} != true ]
          then
            notes "Bitergia Analytics" $version $newsArg --authors $rcArg
            echo 'notes<<$eof' >> $GITHUB_OUTPUT
            cat $release_file | tail -n +2 >> $GITHUB_OUTPUT
            echo '$eof' >> $GITHUB_OUTPUT
          else
            echo "# Bitergia Analytics ${version}" > $release_file
          fi
          
          cat << $eof >> $release_file
          The following list describes the changes by component:

          $opensearch_notes
          $dashboards_notes
          $plugin_notes
          $dotplot_notes
          $network_notes
          $polar_notes
          $radar_notes
          $perceval_public_inbox_notes
          $perceval_topicbox_notes
          $bap_elk_backends_notes
          $sortinghat_openinfra_notes
          $eof

          cat $release_file

      - name: Generate NEWS
        if: inputs.release_candidate == false
        env:
          notes_bitergia_analytics: "${{ steps.notes.outputs.notes }}"
          notes_bitergia_analytics_plugin: "${{ needs.bitergia-analytics-plugin.outputs.notes }}"
          notes_bitergia_analytics_opensearch: "${{ needs.bitergia-analytics-opensearch.outputs.notes }}"
          notes_bitergia_analytics_opensearch_dashboards: "${{ needs.bitergia-analytics-opensearch-dashboards.outputs.notes }}"
          notes_dotplot_vis_plugin: "${{ needs.dotplot-vis-plugin.outputs.notes }}"
          notes_network_vis_plugin: "${{ needs.network-vis-plugin.outputs.notes }}"
          notes_polar_vis_plugin: "${{ needs.polar-vis-plugin.outputs.notes }}"
          notes_radar_vis_plugin: "${{ needs.radar-vis-plugin.outputs.notes }}"
          notes_perceval_public_inbox: "${{ needs.perceval-public-inbox.outputs.notes }}"
          notes_perceval_topicbox: "${{ needs.perceval-topicbox.outputs.notes }}"
          notes_bap_elk_backends: "${{ needs.bap-elk-backends.outputs.notes }}"
          notes_sortinghat_openinfra: "${{ needs.sortinghat-openinfra.outputs.notes }}"
        run: |
          version=${{ needs.semverup.outputs.version }}
          news_file="NEWS"
          old_news="NEWS_old"
          new_notes="tmp_new_notes"
          today=$(date -u "+%Y-%m-%d")
          
          packages=(
          bitergia_analytics_opensearch
          bitergia_analytics_opensearch_dashboards
          bitergia_analytics_plugin
          dotplot_vis_plugin
          network_vis_plugin
          polar_vis_plugin
          radar_vis_plugin
          perceval_public_inbox
          perceval_topicbox
          notes_bap_elk_backends
          sortinghat_openinfra)
          
          mv $news_file $old_news
          touch $news_file $new_notes

          echo "# Releases" >> $news_file
          echo "" >> $news_file
          echo "## Bitergia Analytics $version - ($today)" >> $news_file
          echo "$notes_bitergia_analytics" >> $news_file
          echo "" >> $news_file
          for package in "${packages[@]}"
          do
              package_name=$(echo $package | tr '_' '-')
              package_notes_var="notes_$package"
              package_notes="${!package_notes_var}"
              contents="$(echo "$package_notes" | tail -n +2)"
              if [ ! -z "$contents" ]
              then          
                  echo "### $package_name" >> $new_notes
                  echo "$contents" >> $new_notes
                  echo "" >> $new_notes
              fi
          done
          
          echo "" >> $news_file
          echo "The following list describes the changes by component:" >> $news_file
          echo "" >> $news_file
          cat $new_notes >> $news_file
          
          cat $old_news | tail -n +2 >> $news_file
          
          rm $old_news $new_notes
          git add $news_file 
          
          cat $news_file
      
      - id: current_time
        name: Store current time to get the release workflow
        run: |
          datetime=$(date +"%Y-%m-%dT%H:%M:%S%z")
          echo "datetime=$datetime" >> $GITHUB_OUTPUT
          echo $datetime

      - id: publish
        name: Publish new version.
        run: |
          echo "publish"
      
      - id: wait-for-release
        name: Wait for release to finish.
        if: steps.publish.outcome == 'success'
        run: |
          echo "wait for release"

      - id: rollback
        name: Rollback last commits and remove tag
        if: steps.wait-for-release.outcome == 'failure'
        run: |
          echo "rollback"

